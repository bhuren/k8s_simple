### Playbook to install docker. Uses shell script from docker, 
### --- elaborated @ https://docs.docker.com/engine/install/ubuntu/#install-using-the-convenience-script
### Also, bridging module is loaded and k8s.conf file is configured as per: https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
### This Playbook assumes firewall is disabled or required ports have been allowed through the firewall already.
### Also, configures Docker daemon to use systemd for the management of the container’s cgroup driver.
---
- name: Ensuring bridging module is loaded and k8s.conf files are created & Disablinbg firewall
  block:
   - command: modprobe br_netfilter
     name: loading bridge filter  
   - copy:
       dest: "/etc/modules-load.d/k8s.conf"
       content: |
          br_netfilter
     name: Creating /etc/modules-load.d/k8s.conf         
   - copy: 
        dest: "/etc/sysctl.d/k8s.conf"
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
     name: Creating /etc/sysctl.d/k8s.conf     
   - name: creating docker directory
     ansible.builtin.file:
        path: /etc/docker
        state: directory
        mode: '0755'    
   - name: Disabing firewall
     ufw:
       state: disabled     
   - command: sysctl --system
     name: loading sysctl settings
- name: installing docker
  block:
    - name: install docker runtime
      ansible.builtin.script: files/get-docker.sh          
    - name: Configure the Docker daemon to use systemd for the management of the container’s cgroups.
      copy:
        dest: "/etc/docker/daemon.json"
        content: |
          {
              "exec-opts": ["native.cgroupdriver=systemd"],
              "log-driver": "json-file",
              "log-opts": {
                "max-size": "100m"
              },
              "storage-driver": "overlay2"
          }
    - name: restart docker
      ansible.builtin.service:
        name: docker
        state: restarted